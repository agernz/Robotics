//Pins for drive left, right, front and back
const int driveLF = 11;
const int driveRF = 10;
const int driveLB = 5;
const int driveRB = 6;

const int maxChars = 4;
char input[maxChars+1];
char ch;
int index;

int command = 0;
int speed_val = 0;

void setup() {
  //Set all drive pins to output
  pinMode(driveLF, OUTPUT);
  pinMode(driveRF, OUTPUT);
  pinMode(driveLB, OUTPUT);
  pinMode(driveRB, OUTPUT);
  
  //Serial communication at baud rate of 9600
  Serial.begin(9600);
}

void servoPulse(int pin, int s)
{
  digitalWrite(pin, HIGH);
  delayMicroseconds(s);
  digitalWrite(pin, LOW);
}

int get_speed(int s)
{
  if(s > 100)
  {
    return map(s, 100, 150, 1500, 2000);
  }
  else if(s < 100)
  {
    return map(s, 50, 100, 1000, 1500);
  }
}

void loop() {

  if(Serial.available())
  {
    command = Serial.read();
    speed_val = get_speed(Serial.peek());
    Serial.print(command); 
  }

  if(command == 1)
  {
    
    Serial.print(speed_val); 
    
    servoPulse(driveLF, speed_val);
    servoPulse(driveRF, speed_val);
    servoPulse(driveLB, speed_val);
    servoPulse(driveRB, speed_val);
  }
  else if(command == 2)
  {
    speed_val = get_speed(Serial.read());
    Serial.print(speed_val); 
    
    servoPulse(driveLF, speed_val);
    servoPulse(driveRF, speed_val);
    servoPulse(driveLB, speed_val);
    servoPulse(driveRB, speed_val);
  }
  else if(command == 3)
  {
    speed_val = get_speed(Serial.read());
    Serial.print(speed_val); 
    
    servoPulse(driveLF, 100 - speed_val);
    servoPulse(driveRF, speed_val);
    servoPulse(driveLB, 100 - speed_val);
    servoPulse(driveRB, speed_val);
  }

  
  /*//wait for incoming data
  if(Serial.available() > 0)
  {
    ch = Serial.read();
    Serial.write(ch);

    if(index < maxChars && isDigit(ch))
    {
      input[index++] = ch;
    }
    else
    {
      input[index] = 0;
      command = atoi(input);
      //Forward
      if(command == 1)
      {
        blinkL13();
        digitalWrite(driveLB, HIGH);
      }
      else
      {
        digitalWrite(driveLB, LOW);
      }

      input;
      index = 0;
    }
  }

  delay(100);*/
}
